// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PossibleAction {
  RESETPWD
  ENABLEMFA
  DISABLEMFA
  DISABLEACC
  ENABLEACC
  ADDAPIKEY
  DELAPIKEY
  EXPIREAPIKEY
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  password String
  mfa Boolean @default(false)
  created_at DateTime @default(now())
  modified_at DateTime @default(now())
  audit_trail AuditLog[]
  api_keys ApiKey[]
  enabled Boolean
  session_key SessionKey[]
}

model AuditLog {
  id Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id])
  user_id Int
  action PossibleAction 
  system_action Boolean @default(false)
}

model ApiKey {
  id Int @id @default(autoincrement())
  cute_name String // Will be uniques per user
  description String?
  key String @unique
  expired Boolean @default(false)
  assigned_to User @relation(fields: [assigned_to_id], references: [id])
  assigned_to_id Int 
  created DateTime @default(now())
  expires DateTime
}

model SessionKey {
  id Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id])
  user_id Int 
  session_key String @unique
  created_at DateTime @default(now())
  expires_at DateTime @default(dbgenerated("NOW() + interval '7 days'"))
}